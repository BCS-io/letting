#!/usr/bin/env bash

#
# ansible provision server
#

tags=all
limit=''
playbook='site'

print_usage() {
  printf "Ansible wrapper\n\n"
  printf "options are as follows:\n"
  printf "Limiting of playbook hosts - optional:\n"
  printf "  -a all\n"
  printf "  -c development client admin machine\n"
  printf "  -C production client admin machine\n"
  printf "  -d development\n"
  printf "  -l local development\n"
  printf "  -L local production\n"
  printf "  -p production\n"
  printf "  -s staging\n\n"
  printf ""
  printf "  -t tag applied to the running playbook\n"
  printf "     Example tags:\n"
  printf "     dokku, database, import\n"
  printf "Example: bin/ansible-playbook -t dokku  \n"
}


print_production_banner() {
  printf "\n\n"
  printf "  ******************************************\n"
  printf "  *                                        *\n"
  printf "  *                Production              *\n"
  printf "  *                                        *\n"
  printf "  ******************************************\n"
  printf "\n\n"
}

are_you_sure() {
  read -p "Continue (y/n)? " choice
  case "$choice" in
    y|Y ) printf "\nYes. Continuing...\n";;
    n|N ) printf "\nNo. Exiting\n"
          exit 1 ;;
    * ) printf "\nInvalid. Exiting\n"
        exit 1 ;;
  esac
}

while getopts 'acCdlLht:ps' flag; do
  case "${flag}" in
    a) limit='--limit all' ;;
    c) playbook='client' 
       limit='--limit lamba.bcs.io' ;;
    C) playbook='client'
       limit='--limit lamba.local.fl-adams.uk' ;;
    d) limit='--limit cava.fl-adams.uk' ;;
    h) print_usage
       exit 1 ;;
    l) limit='--limit jura.local.bcs.io' ;;
    L) limit='--limit kerrera.local.fl-adams.uk' ;;
    p) print_production_banner
       are_you_sure
       limit='--limit eigg.fl-adams.uk' ;;
    s) limit='--limit danna.fl-adams.uk' ;;
    t) tags=$OPTARG ;;
    *) print_usage
       exit 1;;
  esac
done

if (( $OPTIND == 1 )); then
  print_usage
  exit 1
fi

if [[ -z "$limit" ]];
then
      echo "Limiting of playbook hosts is required. See help."
      exit 1
fi

ansible_path="./ansible"

(cd $ansible_path && ansible-playbook ${playbook}.yml --inventory hosts.ini  ${limit} --tags "${tags}")
