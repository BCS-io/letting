####
#
# Credit
#
# Generated by payments and linked to a debit. The credit offsets
# a debit charged to a property account.
#
#
# A payment is applied to one property account. When being applied
# it finds unpaid debits and generates a matching credit.
# The credits get set during the payments controller #create action.
#
####
#
class Credit < ActiveRecord::Base
  belongs_to :payment
  belongs_to :account
  belongs_to :charge
  has_many :debits, through: :settlements
  has_many :settlements, dependent: :destroy

  validates :charge_id, :on_date, presence: true
  validates :amount, amount: true
  validates :amount, numericality:
                     { less_than_or_equal_to: 100_000 }
  before_save :reconcile

  after_initialize do
    self.on_date = Date.current if on_date.blank?
  end

  def charge_type
    charge.charge_type
  end

  def clear_up
    mark_for_destruction if amount.nil? || amount.round(2) == 0
  end

  def outstanding
    amount - settled
  end

  def spent?
    amount.round(2) == settled.round(2)
  end

  # charge_id - the charge you are querying for unspent credits.
  # returns - the unspent credits for the charge_id
  #
  def self.available charge_id
    where(charge_id: charge_id).order(:on_date).reject(&:spent?)
  end

  private

  def reconcile
    Settlement.resolve_credit self, Debit.available(charge_id)
  end

  def settled
    settlements.pluck(:amount).inject(0, :+)
  end
end
