require_relative '../../stage/stage_client'

STDOUT.sync = true

namespace :db do
  namespace :stage do

    desc "Imports lettings data from csv's generated by previous system."
    task :clients do |_task, _args|
      include Logging
      logger.info 'stage'
      if File.exist?('import_data/patch/clients_patch.csv')

        FileUtils.mkdir_p 'import_data/staging/'
        patch = StageClient.new input: clients, patch: patch_clients
        patch.cleanse

        CSV.open 'import_data/staging/staging_clients.csv',
                 'w',
                 write_headers: true,
                 headers: DB::FileHeader.client do |csv_object|
          patch.input.each do |row_array|
            csv_object << row_array
          end
        end
        logger.info 'complete'
      else
        warn missing_clients_csv_message
      end
    end

    def clients
      DB::CSVTransform.to_a 'clients',
                            headers: DB::FileHeader.client,
                            location: 'import_data/legacy'
    end

    def patch_clients
      DB::CSVTransform.to_a 'clients_patch',
                            headers: DB::FileHeader.client,
                            location: 'import_data/patch'
    end

    def missing_clients_csv_message
      'Warning: clients.csv is missing - a patch cannot be generated'
    end
  end
end