STDOUT.sync = true

desc "Imports lettings data from csv's generated by previous system."
task :patch_clients do |_task, args|
  include Logging
  logger.info 'patch'
  if File.exist?('import_data/patch/clients_patch.csv')

    FileUtils.mkdir_p 'import_data/patched_legacy/'
    patched = clients_file.map! do |client|
      matched = patch_clients.detect do |patch_client|
        client[:human_ref] == patch_client[:human_ref]
      end
      if matched
        matched
      else
        client
      end
    end

    CSV.open('import_data/patched_legacy/patched_clients.csv',
             'w',
             write_headers: true, headers: DB::FileHeader.client) do |csv_object|
      patched.each do |row_array|
        csv_object << row_array
      end
    end
    logger.info 'complete'
  else
    warn missing_clients_csv_message
  end
end

def clients_file
  DB::FileImport.to_a 'clients',
                      headers: DB::FileHeader.client,
                      location: 'import_data/legacy'
end

def patch_clients
  DB::FileImport.to_a 'clients_patch',
                      headers: DB::FileHeader.client,
                      location: 'import_data/patch'
end

def missing_clients_csv_message
  'Warning: clients.csv is missing - a patch cannot be generated'
end

