STDOUT.sync = true

desc "Imports lettings data from csv's generated by previous system."
task :patch_acc_info do |_task, _args|
  include Logging
  logger.info 'patch'
  if File.exist?('import_data/patch/acc_info_patch.csv')

    FileUtils.mkdir_p 'import_data/staging/'
    patched = acc_info_file.map! do |charge|
      matched = patch_filey.find do |patch_charge|
        charge[:human_ref] == patch_charge[:human_ref] &&
        charge[:charge_type] == patch_charge[:charge_type]
      end
      if matched
        matched
      else
        charge
      end
    end

    CSV.open 'import_data/staging/staging_acc_info.csv',
             'w',
             write_headers: true,
             headers: DB::FileHeader.charge do |csv_object|
      patched.each do |row_array|
        csv_object << row_array
      end
    end
    logger.info 'complete'
  else
    warn missing_acc_info_csv_message
  end
end

def acc_info_file
  DB::CSVTransform.to_a 'acc_info',
                        headers: DB::FileHeader.charge,
                        location: 'import_data/legacy'
end

def patch_filey
  DB::CSVTransform.to_a 'acc_info_patch',
                        headers: DB::FileHeader.charge,
                        location: 'import_data/patch'
end

def missing_acc_info_csv_message
  'Warning: acc_info.csv is missing - a patch cannot be generated'
end
