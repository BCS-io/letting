STDOUT.sync = true

desc "Imports lettings data from csv's generated by previous system."
task :patch_acc_items do |_task, _args|
  include Logging
  logger.info 'patch'
  if File.exist?('import_data/patch/acc_items_patch.csv')

    FileUtils.mkdir_p 'import_data/staging/'
    patched = acc_items_file.map! do |account|
      matched = acc_items_patch_file.find do |patch_charge|
        account[:human_ref] == patch_charge[:human_ref] &&
        account[:charge_code] == patch_charge[:charge_code] &&
        account[:on_date] == patch_charge[:on_date]
      end
      if matched
        matched
      else
        account
      end
    end

    CSV.open 'import_data/staging/staging_acc_items.csv',
             'w',
             write_headers: true,
             headers: DB::FileHeader.account do |csv_object|
      patched.each do |row_array|
        csv_object << row_array
      end
    end
    logger.info 'complete'
  else
    warn missing_acc_items_csv_message
  end
end

def acc_items_file
  DB::CSVTransform.to_a 'acc_items',
                        headers: DB::FileHeader.account,
                        location: 'import_data/legacy'
end

def acc_items_patch_file
  DB::CSVTransform.to_a 'acc_items_patch',
                        headers: DB::FileHeader.account,
                        location: 'import_data/patch'
end

def missing_acc_items_csv_message
  'Warning: acc_items.csv is missing - a patch cannot be generated'
end
